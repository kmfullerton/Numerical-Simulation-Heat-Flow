%function spline_coefficent_matrix = CubicSpline(tvec, spline_data)load tvec.mat;load spline_data.mat;m = length(tvec);ddf = zeros(m,1);for i = 2:m-2  % Calculate Second derivatives at xi  xim1 = tvec(i-1);  xi = tvec(i);  xip1 = tvec(i+1);  fim1 = spline_data(i-1);  fi = spline_data(i);  fip1 = spline_data(i+1);  ddfim1 = ddf(i-1);    [c1, c2, val1] = Calc_Second_Derivatives(xim1, xi, xip1, fim1, fi, fip1, ddfim1);    % Calculate Second Derivatives at xi+1  xim1 = tvec(i);  xi = tvec(i+1);  xip1 = tvec(i+2);  fim1 = spline_data(i);  fi = spline_data(i+1);  fip1 = spline_data(i+2);  ddfim1 = ddf(i);  [c3, c4, val2] = Calc_Second_Derivatives(xim1, xi, xip1, fim1, fi, fip1, ddfim1);    % Algebra to calculate second derivatives simultaneously    ddfip1 = ((c1*val2)-(c3*val1))/((c1*c3*c4)-((c3*c2)/c1));  ddfi = (val1/c1) - ((c2*ddfip1)/c1);  ddf(i) = ddfi;  ddf(i+1) = ddfip1;  endforclear c1clear c2clear c3clear c4% Calculate Spline Coefficient Matrixfor i = 2:m  ddfim1 = ddf(i-1);  ddfi = ddf(i);  xim1 = tvec(i-1);  xi = tvec(i);  fim1 = spline_data(i-1);  fi = spline_data(i);    c1 = ddfim1/(6*(xi-xim1));  c2 = ddfi/(6*(xi-xim1));  c3 = (fim1/(xi-xim1)) - ((ddfi*(xi-xim1))/6);  c4 = (fi/(xi-xim1)) - ((ddfi*(xi-xim1))/6);  spline_coefficient_matrix(i,1:4) = [c1, c2, c3, c4]; endfor