% Tesk 4 Script: Sample Max temp and cubic spline% This script requires the following variables loaded into the workspace: T, tvecclear, clcload Tempmatrix.mat;load tvec.mat;r = length(tvec);j = 1;for i = 1:r  t = tvec(i);  tempvec = T(i,:);  maxtemp(i) = max(tempvec);    if rem(t,0.04) == 0    spline_data(j,1:2) = [t, max(tempvec)];    j = j+1;  endif  endforplot(tvec, maxtemp)grid onxlabel('Time (s)')ylabel('Maximum Temperature')h = gcf;saveas(h, 'task4fig1.png')% Cubic Spline Routinetsvec = spline_data(:,1);spline_data = spline_data(:,2);run CubicSpline.mq = length(tsvec);spline_coefficient_matrix(q+1,1:4) = [0 0 0 0];  t2vec = 0:0.02:20; result(1) = 0; for k = 2:length(t2vec)-2 lowerindex = 1;   xval = t2vec(k);  % Find the interval in which the specified t value falls  for j = 1:length(tsvec)    diff = xval - tsvec(j);    if (diff >= 0)    lowerindex = j;    endif    endfor  % Select coefficients from coefficient matrix  c1 = spline_coefficient_matrix(lowerindex,1);  c2 = spline_coefficient_matrix(lowerindex,2);  c3 = spline_coefficient_matrix(lowerindex,3);  c4 = spline_coefficient_matrix(lowerindex,4);    xi = tsvec(lowerindex);  if lowerindex = 1  xim1 = 0;  else    xim1 = tsvec(lowerindex-1);    endif    result(k) = (c1*((xi-xval)^3)) + (c2*((xval-xim1)^3)) + (c3*(xi-xval)) + (c4*(xval-xim1));    endforresult(k+1) = 0;result(k+2) = 0;%plot(tvec, spline_data,'.r',t2vec, result,'g')%grid on%axis([0 10 200 500])%legend('Simulation Output', 'Sampled Data', 'Cubic Spline Approximation')%xlabel('Time (s)')%ylabel('Maximum Temperature')%h = gcf;%saveas(h, 'cubicspline.png') 